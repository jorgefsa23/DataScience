---
title: "Repor of US Births (2000-2014) in Quarto"
author: "Jorge Escobar _ jorge.fsa23@gmail.com"
date: "`r format(Sys.time(), '%b %d, %Y %H:%M:%S')`"
format: 
    html:
        toc: true
        toc-title: Summary
        number-sections: true
editor: visual
---

## Introduction

This is an `R Marckdown` report developed in `R` language and `RStudio IDE`.

The Report was developed by data available in GitHub repository of [fivethirtyeight](https://github.com/fivethirtyeight/data/tree/master/births) behind the story *Some People Are Too Superstitious To Have A Baby On Friday The 13th*.

The file analyzed was `US_births_2000-2014_SSA.csv`. It contains U.S. births data for the years 2000 to 2014, as provided by the US Social Security Administration.

It has the following structure:

Header               |  Definition
---------------------|---------------------------------------------------
year                 | Year
month                | Month
date_of_month        | Day number of the month
day_of_week          | Day of week, where 1 is Monday and 7 is Sunday
births               | Number of births (of each day)


> On the next sections, the results of basic data analysis with R and a line-graph constructed with the package `ggplot`. Finally, a test of the hypothesis on incidence of Friday the 13 into number of births.

	
## Preparing environment
 
### Loading packages
<!-- If necessary, the packages must be installed before in RStudio -->
```{r message=FALSE, warning=FALSE}
library(tidyverse) # data treatment
```

### Database reading
```{r}
us_births <- read.table(file = "US_births_2000-2014_SSA.csv",
                     header = TRUE,
                     sep = ",",)
```

## Structure
```{r}
glimpse(us_births)
```
All columns were identified as *int* data type. That means all values are numeric, while some of them should be treated as not numeric. Later, we will transform them into *factor*.\n\n
The database has `r nrow(us_births)` rows and `r ncol(us_births)` columns.
Otherwise, the database dimension is: `r dim(us_births)`

### Visualizing the first 5 rows

```{r}
us_births %>% 
  head(3) 
```
The function head() with parameter (5) shows the first lines.

The names of the columns are: `r names(us_births)`.

## Data transformation
As mentioned before, some data are of type **int* while we need to read them as *factor*.\n
Columns: "year", "month", "date_of_month" and "day_of_week" are transformed (`mutate`) by the function `as.factor()`.

```{r}
us_births <- us_births %>%
              mutate(year = as.factor(year),
                     month = as.factor(month),
                     date_of_month = as.factor(date_of_month),
                     day_of_week = as.factor(day_of_week))

glimpse(us_births)
```

## Data Analysis
The function `tapply` is an easy way to visualize statistics (transforming columns into objects with the function `attach`).\n
To a better visualization of the result, we can also use the function `group_by` that will exhibit it as a basic table.

### Mean and SD of births by month:
```{r}
us_births %>% 
  group_by(month) %>% 
  summarise(mean_month = mean(births),
            sd_month = sd(births))
```
Means of Births are relative similar between the months. There is a peak in September and a valley in January, but the difference on means is only 1000 births. SD is high, always more than 2000.

### Mean and SD of births by day of the week:
```{r}
us_births %>% 
  group_by(day_of_week) %>% 
  summarise(mean_month = mean(births),
            sd_month = sd(births))
```
There is a big difference when we consider workdays (Monday-Friday) and Weekends, when the number of births decrease considerably. Tuesdays have the biggest value on mean during all days of the week.


### Mean and SD of births by year:
```{r}
us_births %>% 
  group_by(year) %>% 
  summarise(mean_month = mean(births),
            sd_month = sd(births))
```
Considering this window (years 2000-2014), the year of 2010 is a turn over in number of births, when the mean decrease in about 1000. 

## Graphic plot
We will organize data with the function `group_by`. Lets organize data by year to sum total of births by year.
```{r}
us_births_groupby <- us_births %>% 
                          group_by(year) %>% 
                          summarise(total_year = sum(births))

us_births_groupby
```

>The plot area is prepared by the function `ggplot`:

```{r}
ggplot(us_births_groupby, aes(x=year, y=total_year, group=1)) +
  geom_line()+
  geom_point()+
  labs(x = "Year", 
       y = "Number of Births",
       title = "Births by year (2000-2014") 
```
The line graphic shows more characteristics. In fact, the year 0f 2007 is the peak on total number of births, that starts decreasing on the next year (2008). The year 2010 that was identified before, is when this tendency is marked.


## Hypothesis: Friday the 13 has incidence into birth numbers.

### Babies on Fridays:
We will filter (function `filter`) births when the day of the week is "5" (Friday), and store it into a new database, observing the mean of births for this day (we can verify that its value was already observed on the first section).
```{r}
friday <- us_births %>% 
  filter(day_of_week == '5') 

mean(friday$births)
```

### Babies on Friday the 13:
A double filter will show us all births on Friday (day_of_week == '5') and date 13 ( date_of_month == '13'). Lets observe the mean of births on this new database.
```{r}
friday13 <- us_births %>% 
  filter(day_of_week == '5', 
         date_of_month == '13')

mean(friday13$births)
```

We can also, observe the mean of births for each month as following:
```{r}
friday13 %>% 
  group_by(month) %>% 
  summarise(mean_month = mean(births),
            sd_month = sd(births))
```

## Conclusion 

> The results show a mean of 12596 when the day is Friday, and a mean of 11950 when it is Friday the 13. The difference between those means is 646 births. That could be considered as not enought significant, also considering the Mean between different months of the year. Thoes results indicate that in fact, some people could avoided this data, but their number is not significant into the general demand of hospitals.
